(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{504:function(t,e,a){"use strict";a.r(e);var s=a(21),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"_1、概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、概述"}},[t._v("#")]),t._v(" 1、概述")]),t._v(" "),a("p",[t._v("zookeeper 是一个开源的分布式的，为分布式框架提供协调服务的 Apache 项目。")]),t._v(" "),a("p",[a("strong",[t._v("zookeeper 工作机制")]),t._v("：")]),t._v(" "),a("p",[t._v("zookeeper 从设计模式角度来理解：是一个基于观察者模式设计的分布式服务管理框架，它负责存储和管理大家都关心的数据，然后接受观察者的注册，一旦这些数据的状态发生变化，zookeeper 就将负责通知已经在 zookeeper 上注册的那些观察者做出相应的反应。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211122213720074-2031650210.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"_2、特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、特点"}},[t._v("#")]),t._v(" 2、特点")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211122214132554-930233919.png",alt:""}})]),t._v(" "),a("p",[t._v("1、zookeeper：一个领导者（Leader），多个跟随者（Follower）组成的集群")]),t._v(" "),a("p",[t._v("2、集群中只要有半数以上节点存活，zookeeper 集群就能正常服务。所以 zookeeper 适合安装奇数台服务器。")]),t._v(" "),a("p",[t._v("3、全局数据一致：每个 Server 保存一份相同的数据副本，Client 无论连接到哪个 Server，数据都是一致的。")]),t._v(" "),a("p",[t._v("4、更新请求顺序执行，来自同一个 Client 的更新请求按其发送顺序一次执行。")]),t._v(" "),a("p",[t._v("5、数据更新原子性，一次数据更新要么成功，要么失败。")]),t._v(" "),a("p",[t._v("6、实时性，在一定时间范围内，Client 能读到最新数据。")]),t._v(" "),a("h3",{attrs:{id:"_3、数据结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、数据结构"}},[t._v("#")]),t._v(" 3、数据结构")]),t._v(" "),a("p",[t._v("zookeeper 数据模型的结构与 Lunix 文件系统很类似，整体上可以看做是一棵树，每个节点称作一个 ZNode。每一个ZNode 默认能够存储 1MB 的数据，每个 ZNode 都可以通过其路径唯一标识。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211122214837693-95493822.png",alt:""}})]),t._v(" "),a("p",[t._v("4、应用场景")]),t._v(" "),a("p",[t._v("提供的服务包括：统一命名服务、统一配置管理、统一集群管理、服务器节点动态上下线、软负载均衡等。")]),t._v(" "),a("p",[a("strong",[t._v("统一命名服务")])]),t._v(" "),a("p",[t._v("在分布式环境下，经常需要对应用/服务进行统一命名，便于识别。")]),t._v(" "),a("p",[t._v("例如：IP 不容易记住，而域名容易记住。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211123215403042-25866100.png",alt:""}})]),t._v(" "),a("p",[a("strong",[t._v("统一配置管理")])]),t._v(" "),a("p",[t._v("1、分布式环境下，配置文件同步非常常见。")]),t._v(" "),a("p",[t._v("（1）一般要求一个集群中，所有节点配置信息是一致的，比如 Kafka 集群。")]),t._v(" "),a("p",[t._v("（2）对配置文件修改后，希望能够快速同步到各个节点上。")]),t._v(" "),a("p",[t._v("2、配置管理可交由 zookeeper 实现。")]),t._v(" "),a("p",[t._v("（1）可将配置信息写入 zookeeper 上的一个 Znode。")]),t._v(" "),a("p",[t._v("（2）各个客户端服务器监听这个 Znode。")]),t._v(" "),a("p",[t._v("（3）一旦 Znode 中的数据被修改，zookeeper将通知各个客户端服务器。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211123215827132-1150685270.png",alt:""}})]),t._v(" "),a("p",[t._v("**统一集群管理"),a("br"),t._v("\n**")]),t._v(" "),a("p",[t._v("1、分布式环境中，实时掌握每个节点的状态是必要的。")]),t._v(" "),a("p",[t._v("（1）可根据节点实时状态做出一个调整。")]),t._v(" "),a("p",[t._v("2、zookeeper 可以实现实时监控节点状态变化")]),t._v(" "),a("p",[t._v("（1）可将节点信息写入 zookeeper 上的一个 Znode。")]),t._v(" "),a("p",[t._v("（2）监听这个 Znode 可获取它的实时状态变化。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211123215948641-1766926032.png",alt:""}})]),t._v(" "),a("p",[a("strong",[t._v("服务器动态上下线")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211123220304769-404675734.png",alt:""}})]),t._v(" "),a("p",[a("strong",[t._v("软负载均衡")])]),t._v(" "),a("p",[t._v("在 zookeeper 中记录每台服务器的访问数，让访问数最少的服务器去处理最新的客户端请求")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211123220408281-2074178795.png",alt:""}}),t._v(" "),a("ClientOnly",[a("CallInArticleAdsense")],1)],1),t._v(" "),a("h3",{attrs:{id:"_5、安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、安装"}},[t._v("#")]),t._v(" 5、安装")]),t._v(" "),a("h4",{attrs:{id:"_1、官网地址"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、官网地址"}},[t._v("#")]),t._v(" 1、官网地址")]),t._v(" "),a("p",[t._v("https://zookeeper.apache.org/")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211123220535682-935108344.png",alt:""}})]),t._v(" "),a("p",[t._v("下载上传到虚拟服务器")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211123223547834-1513846170.png",alt:""}})]),t._v(" "),a("p",[t._v("解压文件到指定目录 /usr/local/")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211123223929764-731187394.png",alt:""}})]),t._v(" "),a("h4",{attrs:{id:"_2、修改配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、修改配置"}},[t._v("#")]),t._v(" 2、修改配置")]),t._v(" "),a("p",[t._v("（1）进入 /usr/local/zookeeper-3.5.7/conf，修改 zoo_sample.cfg 为 zoo.cfg。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211123224357637-673986959.png",alt:""}})]),t._v(" "),a("p",[t._v("（2）在 zookeeper-3.5.7 目录下创建 data 文件夹，用于存放 zookeeper 数据")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211123225128732-1734217554.png",alt:""}})]),t._v(" "),a("p",[t._v("（3）修改 conf/zoo.cfg 配置文件")]),t._v(" "),a("p",[t._v("# The number of milliseconds of each tick")]),t._v(" "),a("h1",{attrs:{id:"通信心跳时间-zookeeper-与-客户端心跳时间-单位毫秒"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通信心跳时间-zookeeper-与-客户端心跳时间-单位毫秒"}},[t._v("#")]),t._v(" 通信心跳时间，zookeeper 与 客户端心跳时间，单位毫秒")]),t._v(" "),a("p",[t._v("tickTime=2000")]),t._v(" "),a("h1",{attrs:{id:"the-number-of-ticks-that-the-initial"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-number-of-ticks-that-the-initial"}},[t._v("#")]),t._v(" The number of ticks that the initial")]),t._v(" "),a("h1",{attrs:{id:"synchronization-phase-can-take"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#synchronization-phase-can-take"}},[t._v("#")]),t._v(" synchronization phase can take")]),t._v(" "),a("h1",{attrs:{id:"lf初始通信时限"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lf初始通信时限"}},[t._v("#")]),t._v(" LF初始通信时限")]),t._v(" "),a("p",[t._v("# Leader和Follower初始连接时能容忍的最多心跳数（tickTime的数量）\ninitLimit=10")]),t._v(" "),a("h1",{attrs:{id:"the-number-of-ticks-that-can-pass-between"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-number-of-ticks-that-can-pass-between"}},[t._v("#")]),t._v(" The number of ticks that can pass between")]),t._v(" "),a("h1",{attrs:{id:"sending-a-request-and-getting-an-acknowledgement"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sending-a-request-and-getting-an-acknowledgement"}},[t._v("#")]),t._v(" sending a request and getting an acknowledgement")]),t._v(" "),a("h1",{attrs:{id:"lf同步通信时限"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lf同步通信时限"}},[t._v("#")]),t._v(" LF同步通信时限")]),t._v(" "),a("p",[t._v("# Leader和Follower之间通信时间如果超过syncLimit * tickTime，Leader认为Follwer死掉，从服务器列表中删除Follwer。\nsyncLimit=5")]),t._v(" "),a("h1",{attrs:{id:"the-directory-where-the-snapshot-is-stored"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-directory-where-the-snapshot-is-stored"}},[t._v("#")]),t._v(" the directory where the snapshot is stored.")]),t._v(" "),a("h1",{attrs:{id:"do-not-use-tmp-for-storage-tmp-here-is-just"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#do-not-use-tmp-for-storage-tmp-here-is-just"}},[t._v("#")]),t._v(" do not use /tmp for storage, /tmp here is just")]),t._v(" "),a("h1",{attrs:{id:"example-sakes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-sakes"}},[t._v("#")]),t._v(" example sakes.")]),t._v(" "),a("h1",{attrs:{id:"保存-zookeeper-中的数据目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#保存-zookeeper-中的数据目录"}},[t._v("#")]),t._v(" 保存 zookeeper 中的数据目录")]),t._v(" "),a("p",[t._v("dataDir=/usr/local/zookeeper-3.5.7/data")]),t._v(" "),a("h1",{attrs:{id:"the-port-at-which-the-clients-will-connect"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-port-at-which-the-clients-will-connect"}},[t._v("#")]),t._v(" the port at which the clients will connect")]),t._v(" "),a("h1",{attrs:{id:"客户端连接端口-通常不做修改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#客户端连接端口-通常不做修改"}},[t._v("#")]),t._v(" 客户端连接端口，通常不做修改")]),t._v(" "),a("p",[t._v("clientPort=2181")]),t._v(" "),a("h1",{attrs:{id:"the-maximum-number-of-client-connections"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-maximum-number-of-client-connections"}},[t._v("#")]),t._v(" the maximum number of client connections.")]),t._v(" "),a("h1",{attrs:{id:"increase-this-if-you-need-to-handle-more-clients"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#increase-this-if-you-need-to-handle-more-clients"}},[t._v("#")]),t._v(" increase this if you need to handle more clients")]),t._v(" "),a("p",[t._v("#maxClientCnxns=60")]),t._v(" "),a("h1",{attrs:{id:""}},[a("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")])]),t._v(" "),a("h1",{attrs:{id:"be-sure-to-read-the-maintenance-section-of-the"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#be-sure-to-read-the-maintenance-section-of-the"}},[t._v("#")]),t._v(" Be sure to read the maintenance section of the")]),t._v(" "),a("h1",{attrs:{id:"administrator-guide-before-turning-on-autopurge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#administrator-guide-before-turning-on-autopurge"}},[t._v("#")]),t._v(" administrator guide before turning on autopurge.")]),t._v(" "),a("h1",{attrs:{id:"-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#-2"}},[t._v("#")])]),t._v(" "),a("h1",{attrs:{id:"http-zookeeper-apache-org-doc-current-zookeeperadmin-html-sc-maintenance"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-zookeeper-apache-org-doc-current-zookeeperadmin-html-sc-maintenance"}},[t._v("#")]),t._v(" http://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance")]),t._v(" "),a("h1",{attrs:{id:"-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#-3"}},[t._v("#")])]),t._v(" "),a("h1",{attrs:{id:"the-number-of-snapshots-to-retain-in-datadir"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-number-of-snapshots-to-retain-in-datadir"}},[t._v("#")]),t._v(" The number of snapshots to retain in dataDir")]),t._v(" "),a("p",[t._v("#autopurge.snapRetainCount=3")]),t._v(" "),a("h1",{attrs:{id:"purge-task-interval-in-hours"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#purge-task-interval-in-hours"}},[t._v("#")]),t._v(" Purge task interval in hours")]),t._v(" "),a("h1",{attrs:{id:"set-to-0-to-disable-auto-purge-feature"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set-to-0-to-disable-auto-purge-feature"}},[t._v("#")]),t._v(' Set to "0" to disable auto purge feature')]),t._v(" "),a("p",[t._v("#autopurge.purgeInterval=1")]),t._v(" "),a("h4",{attrs:{id:"_3、操作-zookeeper"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、操作-zookeeper"}},[t._v("#")]),t._v(" 3、操作 zookeeper")]),t._v(" "),a("p",[t._v("（1）启动 zookeeper")]),t._v(" "),a("p",[t._v("./bin/zkServer.sh start"),a("br"),t._v("\n#./bin/zkServer.sh start-foreground 可以看到报错的信息")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211124213057176-1952186551.png",alt:""}})]),t._v(" "),a("p",[t._v("（2）查看 zookeeper 状态")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211124213133930-493208872.png",alt:""}})]),t._v(" "),a("p",[t._v("（3）停止 zookeeper")]),t._v(" "),a("p",[t._v("（4）启动客户端")]),t._v(" "),a("p",[t._v("（5）退出客户端")]),t._v(" "),a("h3",{attrs:{id:"_6、集群操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6、集群操作"}},[t._v("#")]),t._v(" 6、集群操作")]),t._v(" "),a("h4",{attrs:{id:"_1、集群安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、集群安装"}},[t._v("#")]),t._v(" 1、集群安装")]),t._v(" "),a("p",[t._v("准备三台虚拟服务器 192.168.0.200、192.168.0.201、192.168.0.202 三台节点部署 zookeeper，（上面安装和配置过程）。")]),t._v(" "),a("p",[t._v("（1）在 /usr/local/zookeeper-3.5.7/data 目录下创建一个 myid 文件")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211124215520094-2028580140.png",alt:""}})]),t._v(" "),a("p",[t._v("（2）在另外两台一样操作，201 为 3，202 为 4。")]),t._v(" "),a("p",[t._v("（3）配置 zoo.cfg 文件")]),t._v(" "),a("p",[t._v("新增如下配置（每台服务器）")]),t._v(" "),a("p",[t._v("server.2=zk200:2888:3888\nserver.3=zk201:2888:3888\nserver.4=zk202:2888:3888")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211124225105990-881722396.png",alt:""}})]),t._v(" "),a("p",[t._v("修改 /etc/hostname")]),t._v(" "),a("p",[t._v("修改 /etc/hosts")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211124225130910-750525332.png",alt:""}})]),t._v(" "),a("p",[t._v("解读：")]),t._v(" "),a("p",[t._v("A 是一个数字，表示这是第几号服务器。")]),t._v(" "),a("p",[t._v("集群模式下配置一个文件 myid ，这个文件在 data 目录下，里面的数值就是 A，zookkper 启动时读取此文件，拿到里面的数据与 zoo.cfg 里面的配置信息比较，从而判断到底是哪个 server。")]),t._v(" "),a("p",[t._v("B 是这个服务器的地址。")]),t._v(" "),a("p",[t._v("C 是这个服务器 Follower 与集群中的 Leader 服务器交换信息的端口。")]),t._v(" "),a("p",[t._v("D 是万一集群中的 Leader 服务器挂了，需要一个端口来重新进行选举，选出一个新的 Leader，而这个端口就是用来执行选举是服务器相互通信的端口。")]),t._v(" "),a("h4",{attrs:{id:"_2、集群操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、集群操作"}},[t._v("#")]),t._v(" 2、集群操作")]),t._v(" "),a("h5",{attrs:{id:"_1、分别启动-zookeeper"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、分别启动-zookeeper"}},[t._v("#")]),t._v(" 1、分别启动 zookeeper")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211124230236462-14902310.png",alt:""}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211124230248903-746772768.png",alt:""}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211124230300755-772708435.png",alt:""}})]),t._v(" "),a("h5",{attrs:{id:"_2、选举机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、选举机制"}},[t._v("#")]),t._v(" 2、选举机制")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211125215904282-1670752312.png",alt:""}})]),t._v(" "),a("p",[t._v("SID：服务器 ID，用来唯一标识一台 Zookeeper 集群中的机器，每台机器不能重复，和 myid 一致。")]),t._v(" "),a("p",[t._v("ZXID：事务 ID。ZXID 是一个事务 ID，用来标识一个服务器状态的变更。在某一时刻，集群中的每台机器的 ZXID 值不一定完全一致，这个 Zookeeper服务器对于客户端“更新请求”的处理逻辑有关。")]),t._v(" "),a("p",[t._v("Epoch：每个 Leader 任期的代号。没有 Leader 时同一轮投票过程中的逻辑时钟值是相同的。每投完一次票这个数据就会增加")]),t._v(" "),a("p",[t._v("（1）服务器1启动，发起一次选举。服务器1投自己一票。此时服务器1票数一票，不够半数以上（3票），选举无法完成，服务器1状态保持为 LOOKING。")]),t._v(" "),a("p",[t._v("（2）服务器2启动，再发起一次选举。服务器1和服务器2分别投自己一票并交换选票信息：此时服务器1发现服务器2的 myid 比自己目前投票推举的（服务器1）大，更改选票为推举服务器2。此时服务器1票数0票，服务器2票数2票，没有半数以上结果，选举无法完成，服务器1，2状态保持LOOKING")]),t._v(" "),a("p",[t._v("（3）服务器3启动，发起一次选举。此时服务器1和服务器2都会更改选票为服务器3,。此次投票结果：服务器1为0票，服务器2为0票，服务器3为3票。此时服务器3的票数已经超过半数，服务器3当选 Leader 。服务器1,2更改状态为 FOLLOWING，服务器3更改状态为 LEADING。")]),t._v(" "),a("p",[t._v("（4）服务器4启动，发起一次选举。此时服务器1，2，3已经不是 LOOKING 状态，不会更改选票信息。交换选票信息结果。服务器3为3票，服务器4为1票。此时服务器4服从多数，更改选票信息为服务器3，并更改状态为 FOLLOWING。")]),t._v(" "),a("p",[t._v("（5）服务器5启动，同4一样当小弟。")]),t._v(" "),a("h5",{attrs:{id:"_3、选举机制-非第一次启动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、选举机制-非第一次启动"}},[t._v("#")]),t._v(" 3、选举机制--非第一次启动")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211125221731972-362638233.png",alt:""}})]),t._v(" "),a("p",[t._v("（1）当 Zookeeper 集群中的一台服务器出现一下两种情况之一时，就会开始进入 Leader 选举：")]),t._v(" "),a("p",[t._v("●服务器初始化启动。")]),t._v(" "),a("p",[t._v("●服务器运行期间无法和 Leader 保持连接。")]),t._v(" "),a("p",[t._v("（2）而当一台机器进入 Leader 选举流程时，当前集群也可能会处于一下两种状态：")]),t._v(" "),a("p",[t._v("●集群中本来就已经存在一个 Leader。")]),t._v(" "),a("p",[t._v("对于第一种已经存在 Leader 的情况下，机器试图去选举 Leader 时，会被告知当前服务器的 Leader 信息，对于该机器来说，仅仅需要和 Leader 机器建立连接，并进行状态同步即可。")]),t._v(" "),a("p",[t._v("●集群中确实不存在 Leader。")]),t._v(" "),a("p",[t._v("假设 Zookeeper 由5台服务器组成，SID 分别为1、2、3、4、5，ZXID 分别为8、8、8、7、7，并且此时 SID 为3的服务器是 Leader。某一时刻，3和5服务器出现故障，因此开始进行 Leader 选举。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211128190454847-2075700946.png",alt:""}})]),t._v(" "),a("p",[t._v("选举 Leader 规则：")]),t._v(" "),a("p",[t._v("1、EPOCH 大的直接胜出")]),t._v(" "),a("p",[t._v("2、EPOCH 相同，事务ID 大的胜出")]),t._v(" "),a("p",[t._v("3、事务ID相同，服务器ID 大的胜出")]),t._v(" "),a("h3",{attrs:{id:"_7、客户端命令行操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7、客户端命令行操作"}},[t._v("#")]),t._v(" 7、客户端命令行操作")]),t._v(" "),a("h4",{attrs:{id:"_1、命令行语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、命令行语法"}},[t._v("#")]),t._v(" 1、命令行语法")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211128190357120-2128393932.png",alt:""}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211128190415017-321200540.png",alt:""}})]),t._v(" "),a("p",[t._v("（1）启动客户端")]),t._v(" "),a("p",[t._v("./bin/zkCli.sh -server zk200:2181")]),t._v(" "),a("p",[t._v("（2）显示所有操作命令")]),t._v(" "),a("p",[t._v("（3）znode 节点数据信息")]),t._v(" "),a("p",[t._v("查看当前znode中所包含的内容")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211128191253619-799675882.png",alt:""}})]),t._v(" "),a("p",[t._v("查看当前节点详细数据")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211128191350447-234714112.png",alt:""}})]),t._v(" "),a("p",[t._v("●cZxid：创建节点的事务 zxid")]),t._v(" "),a("p",[t._v("每次修改 Zookeeper 状态都会产生一个 zookeeper 事务ID。事务ID 是 zookeeper 中所有修改总的次序。每次修改都有唯一的 zxid，如果 zxid1 小于 zxid2，那么zxid1 在 zxid2 之前发生。")]),t._v(" "),a("p",[t._v("●ctime：znode 被创建的毫秒数")]),t._v(" "),a("p",[t._v("●mzxid：znode 最后更新的事务 zxid")]),t._v(" "),a("p",[t._v("●mtime：znode 最后修改的毫秒数")]),t._v(" "),a("p",[t._v("●pZxid：znode 最后更行的子节点 zxid")]),t._v(" "),a("p",[t._v("●cversion：znode 子节点变化号，znode 子节点修改次数")]),t._v(" "),a("p",[t._v("●dataVersion：znode数据变化号")]),t._v(" "),a("p",[t._v("●aclVersion：znode访问控制列表的变化号")]),t._v(" "),a("p",[t._v("●ephemeralOwner：如果是临时节点，这个是 znode 拥有者的 session id。如果不是临时节点则是0。")]),t._v(" "),a("p",[t._v("●dataLength：znode 的数据长度")]),t._v(" "),a("p",[t._v("●numChildren：znode 子节点数量")]),t._v(" "),a("h4",{attrs:{id:"_2、节点类型-持久、短暂、有序号、无序号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、节点类型-持久、短暂、有序号、无序号"}},[t._v("#")]),t._v(" 2、节点类型（持久、短暂、有序号、无序号）")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211128192753263-135617768.png",alt:""}})]),t._v(" "),a("p",[t._v("（1）持久化目录节点")]),t._v(" "),a("p",[t._v("客户端与 zookeeper 断开连接后，该节点依旧存在")]),t._v(" "),a("p",[t._v("（2）持久化顺序编号目录节点")]),t._v(" "),a("p",[t._v("客户端与 zookeeper 断开连接后，该节点依旧存在，只是 zookeeper 给该节点名称进行顺序编号")]),t._v(" "),a("p",[t._v("（3）临时目录节点")]),t._v(" "),a("p",[t._v("客户端与 zookeeper 断开连接后，该节点被删除")]),t._v(" "),a("p",[t._v("（4）临时顺序编号目录节点")]),t._v(" "),a("p",[t._v("客户端与 zookeeper 断开连接后，该节点被删除，只是 zookeeper 给该节点名称进行顺序编号。")]),t._v(" "),a("p",[a("strong",[t._v("1）分别创建2个普通节点（永久节点 + 不带序号）")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211128210810426-1924108741.png",alt:""}})]),t._v(" "),a("p",[t._v("注意：创建节点时，要赋值")]),t._v(" "),a("p",[a("strong",[t._v("2）获得节点的值")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211128210913271-1085591048.png",alt:""}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211128211200425-696710235.png",alt:""}})]),t._v(" "),a("p",[a("strong",[t._v("3）创建带序号的节点（永久节点 + 带序号）")])]),t._v(" "),a("p",[t._v("（1）先创建一个普通的根节点 /test/test02")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211128212957010-319012154.png",alt:""}})]),t._v(" "),a("p",[t._v("（2）创建带序号的节点")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211128213054015-301866058.png",alt:""}})]),t._v(" "),a("p",[t._v("如果原来没有序号节点，序号从0开始一次递增。如果原节点下已有2个节点，则再排序时从2开始，一次类推。")]),t._v(" "),a("p",[a("strong",[t._v("4）创建短暂节点（短暂节点 + 不带序号 or 带序号）")])]),t._v(" "),a("p",[t._v("（1）创建短暂的不带序号的节点")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211128213148981-1683272002.png",alt:""}})]),t._v(" "),a("p",[t._v("（2）创建短暂的带序号的节点")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211128213224271-1628281608.png",alt:""}})]),t._v(" "),a("p",[t._v("（3）在当前客户端查看")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211128213418581-769209486.png",alt:""}})]),t._v(" "),a("p",[t._v("（4）退出客户端")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211128211815197-1406029323.png",alt:""}})]),t._v(" "),a("p",[t._v("（5）再次查看目录下短暂节点已经删除")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211128213602526-1329058614.png",alt:""}})]),t._v(" "),a("p",[t._v("（6）修改节点数据")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211128213937363-1758387314.png",alt:""}})]),t._v(" "),a("p",[a("strong",[t._v("5）节点删除与查看")])]),t._v(" "),a("p",[t._v("（1）删除节点")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211128214141073-1406841290.png",alt:""}})]),t._v(" "),a("p",[t._v("（2）递归删除节点")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211128214223302-894747572.png",alt:""}})]),t._v(" "),a("p",[t._v("（3）查看节点状态")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202111/2390370-20211128214322939-1050244227.png",alt:""}})]),t._v(" "),a("h4",{attrs:{id:"_3、监听器原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、监听器原理"}},[t._v("#")]),t._v(" 3、监听器原理")]),t._v(" "),a("p",[t._v("客户端注册监听它关心的目录接地那，当目录节点发生变化（数据改变、节点删除、子目录节点增加删除）时，zookeeper 会通知客户端。监听机制保证 zookeeper 保存的任何的数据的任何改变都能快速的响应到监听了该节点的应用程序。")]),t._v(" "),a("p",[a("strong",[t._v("1、监听器原理：")])]),t._v(" "),a("p",[t._v("1）首先要有一个 main() 线程")]),t._v(" "),a("p",[t._v("2）在 main 线程中创建 zookeeper 客户端，这时就会创建两个线程，一个负责网络连接通信（connect），一个负责监听（listener）。")]),t._v(" "),a("p",[t._v("3）通过 connect 线程将注册的监听事件发送给 zookeeper。")]),t._v(" "),a("p",[t._v("4）在 zookeeper 的注册监听器列表中将注册的监听事件添加到列表中。")]),t._v(" "),a("p",[t._v("5）zookeeper 监听到有数据或路径变化，就会将这个消息发送给 listener 线程。")]),t._v(" "),a("p",[t._v("6）listener 线程内部调用了 process() 方法。")]),t._v(" "),a("p",[a("strong",[t._v("2、常见的监听")])]),t._v(" "),a("p",[t._v("1）监听节点数据额变化（get path [watch]）")]),t._v(" "),a("p",[t._v("2）监听子节点增减的变化（ls path [watch]）")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202112/2390370-20211202161039528-643831881.png",alt:""}})]),t._v(" "),a("p",[a("strong",[t._v("3、节点的值变化监听")])]),t._v(" "),a("p",[t._v("（1）在 zk200 主机上注册监听 /test 节点数据变化")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202112/2390370-20211202163340599-365013704.png",alt:""}})]),t._v(" "),a("p",[t._v("（2）在 zk201 主机上修改 /test 节点的数据")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202112/2390370-20211202163354733-1492664138.png",alt:""}})]),t._v(" "),a("p",[t._v("（3）观察 zk200 主机收到的数变化的监听")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202112/2390370-20211202163412701-1085084634.png",alt:""}})]),t._v(" "),a("p",[t._v("注意：在 zk201再多次修改 /test 的值， zk200 上不会收到监听。因为注册一次，只能监听一次。想再次监听，需要再次注册。")]),t._v(" "),a("p",[a("strong",[t._v("4、节点的子节点变化监听（路径变化）")])]),t._v(" "),a("p",[t._v("1）在 zk200 主机上注册监听 /test 节点的子节点变化")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202112/2390370-20211202165411171-1292349495.png",alt:""}})]),t._v(" "),a("p",[t._v("2）在 zk201 主机 /test 节点上创建子节点")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202112/2390370-20211202165425064-439612405.png",alt:""}})]),t._v(" "),a("p",[t._v("3）观察 zk200 主机收到子节点变化的监听")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img2020.cnblogs.com/blog/2390370/202112/2390370-20211202165437636-624539129.png",alt:""}})]),t._v(" "),a("p",[t._v("注意：节点的路径变化，也是注册一次，生效一次。想多次生效，就需要多次注册。")]),t._v(" "),a("ClientOnly",[a("CallInArticleAdsense")],1),t._v(" "),a("p",[t._v("来源:https://www.cnblogs.com/h1763656169/articles/15590547.html")])],1)}),[],!1,null,null,null);e.default=r.exports}}]);